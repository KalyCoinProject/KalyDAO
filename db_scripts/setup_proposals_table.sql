CREATE TABLE IF NOT EXISTS public.proposals (id UUID PRIMARY KEY DEFAULT uuid_generate_v4(), proposal_id TEXT NOT NULL, title TEXT NOT NULL, description TEXT NOT NULL, summary TEXT, proposer_address TEXT, created_by TEXT, voting_period INTEGER DEFAULT 259200, chain_id INTEGER, state TEXT DEFAULT '0', votes_for INTEGER DEFAULT 0, votes_against INTEGER DEFAULT 0, votes_abstain INTEGER DEFAULT 0, views_count INTEGER DEFAULT 0, category TEXT, tags TEXT[], created_at TIMESTAMPTZ DEFAULT NOW(), updated_at TIMESTAMPTZ DEFAULT NOW(), UNIQUE(proposal_id));
CREATE OR REPLACE FUNCTION increment_proposal_views(p_proposal_id TEXT) RETURNS VOID AS 95868 BEGIN UPDATE public.proposals SET views_count = views_count + 1 WHERE proposal_id = p_proposal_id; END; 95868 LANGUAGE plpgsql;
-- Create test proposal for verification\nINSERT INTO public.proposals (proposal_id, title, description, summary, proposer_address, created_by, chain_id, state, votes_for, votes_against, votes_abstain, category, tags, views_count) VALUES ('test-proposal-init', 'Test Proposal', 'This is a test proposal to verify database setup', 'Test summary', '0xTestAddress', '0xTestAddress', 3889, '0', 0, 0, 0, 'test', ARRAY['test'], 0);
